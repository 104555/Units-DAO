{-# STDLIB_VERSION 5 #-}
{-# CONTENT_TYPE DAPP #-}
{-# SCRIPT_TYPE ACCOUNT #-}

func writeConstString(key: String, value: String) = if !isDefined(getString(this, key)) then StringEntry(key, value) else throw("already initialized: " + key)
func writeInt(key: String, value: Int) =
    if(value < 0)
        then throw("writing negative value " + value.toString() + " for key " + key)
    else IntegerEntry(key, value)


let configAddressStore = "config"
let configAddress = this.getString(configAddressStore)
  .valueOrErrorMessage("userdata: no config")
  .addressFromString().valueOrErrorMessage("userdata: invalid config address")

let voting = configAddress.getString("contract_voting").valueOrErrorMessage("no contract_voting").addressFromString().valueOrErrorMessage("invalid contract_voting")


@Callable(i)
func write(key: String, value: Int) = {
    if i.caller != voting then throw("denied") else
    
    [ IntegerEntry(key, value) ]
}

@Callable(i)
func changeBy(key: String, delta: Int) = {
    if i.caller != voting then throw("denied") else
    
    [ key.writeInt(key.getInteger().valueOrElse(0) + delta) ]
}

@Callable(i)
func delete(key: String) = {
     if i.caller != voting then throw("denied") else

    [ DeleteEntry(key) ]
}

@Verifier(tx)
func verify() = {
    let id = tx.id.toBase58String()
    height >=  this.getIntegerValue("proposal_allow_broadcast_" + this.toString() + "_" + id)
}
